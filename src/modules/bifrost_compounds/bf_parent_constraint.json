{
    "header": {
        "metadata": [
            {
                "metaName": "adskFileFormatVersion",
                "metaValue": "100L"
            }
        ]
    },
    "dependencies": [
        {
            "uri": "file:///Math_types.json"
        },
        {
            "uri": "file:///Math_float.json"
        },
        {
            "uri": "file:///Math_double.json"
        },
        {
            "uri": "file:///Math_long.json"
        },
        {
            "uri": "file:///Math_char.json"
        },
        {
            "uri": "file:///Math_int.json"
        },
        {
            "uri": "file:///Math_short.json"
        },
        {
            "uri": "file:///Math_uchar.json"
        },
        {
            "uri": "file:///Math_uint.json"
        },
        {
            "uri": "file:///Math_ulong.json"
        },
        {
            "uri": "file:///Math_ushort.json"
        },
        {
            "uri": "file:///bifrost_object_i.json"
        },
        {
            "uri": "file:///Core_Constants_default_value.json"
        },
        {
            "uri": "file:///Math_conversion.json"
        },
        {
            "uri": "file:///riv_types.json"
        },
        {
            "uri": "file:///point_types.json"
        },
        {
            "uri": "file:///FCurve.json"
        },
        {
            "uri": "file:///riv_ops.json"
        },
        {
            "uri": "file:///cumulative_sum_array.json"
        },
        {
            "uri": "file:///Math_array.json"
        },
        {
            "uri": "file:///access_offset_array.json"
        },
        {
            "uri": "file:///CoreArrayOps.json"
        },
        {
            "uri": "file:///bifrost_geometry_query_types.json"
        },
        {
            "uri": "file:///geometry_types.json"
        },
        {
            "uri": "file:///set_property_any.json"
        },
        {
            "uri": "file:///set_property.json"
        },
        {
            "uri": "file:///get_property_any.json"
        },
        {
            "uri": "file:///get_property.json"
        },
        {
            "uri": "file:///has_property.json"
        },
        {
            "uri": "file:///create_volume_geo_prop.json"
        },
        {
            "uri": "file:///is_a.json"
        },
        {
            "uri": "file:///create_object_from_schema.json"
        },
        {
            "uri": "file:///is_a_mesh.json"
        },
        {
            "uri": "file:///is_a_strands.json"
        },
        {
            "uri": "file:///is_a_points.json"
        },
        {
            "uri": "file:///is_a_volume.json"
        },
        {
            "uri": "file:///get_geo_schema_type.json"
        },
        {
            "uri": "file:///switch_is_a.json"
        },
        {
            "uri": "file:///get_target_component.json"
        },
        {
            "uri": "file:///create_data_geo_prop.json"
        },
        {
            "uri": "file:///get_geo_component_count.json"
        },
        {
            "uri": "file:///set_geo_property.array.json"
        },
        {
            "uri": "file:///set_geo_property.scalar.json"
        },
        {
            "uri": "file:///get_geo_property.json"
        },
        {
            "uri": "file:///get_strands_structure.json"
        },
        {
            "uri": "file:///update_point_strand_index.json"
        },
        {
            "uri": "file:///int_filter.json"
        },
        {
            "uri": "file:///get_array_indices.json"
        },
        {
            "uri": "file:///get_geo_property_check.json"
        },
        {
            "uri": "file:///check_point_strand_index.json"
        },
        {
            "uri": "file:///update_strands_ratio.json"
        },
        {
            "uri": "file:///int_array_filter.json"
        },
        {
            "uri": "file:///set_geo_property_data.json"
        },
        {
            "uri": "file:///set_point_position.json"
        },
        {
            "uri": "file:///set_sub_object_property.json"
        },
        {
            "uri": "file:///validate_strands.json"
        },
        {
            "uri": "file:///construct_strands.json"
        },
        {
            "uri": "file:///create_strands_from_counts.json"
        },
        {
            "uri": "file:///twice_of.json"
        },
        {
            "uri": "file:///Math_constants.json"
        },
        {
            "uri": "file:///get_property_keys.json"
        },
        {
            "uri": "file:///is_empty.json"
        },
        {
            "uri": "file:///materials.json"
        },
        {
            "uri": "file:///standard_surface_mat.json"
        },
        {
            "uri": "file:///half_of.json"
        },
        {
            "uri": "file:///Math_bool.json"
        },
        {
            "uri": "file:///Math_change_range.json"
        },
        {
            "uri": "file:///change_range.json"
        },
        {
            "uri": "file:///set_strands_shape.json"
        },
        {
            "uri": "file:///Arnold_enums.json"
        },
        {
            "uri": "file:///CoreStringOps.json"
        },
        {
            "uri": "file:///erase_property.json"
        },
        {
            "uri": "file:///set_Arnold_parameter.json"
        },
        {
            "uri": "file:///Arnold_ray_types.json"
        },
        {
            "uri": "file:///Arnold_ray_bitmask.json"
        },
        {
            "uri": "file:///validate_mesh.json"
        },
        {
            "uri": "file:///set_Arnold_geo_settings.json"
        },
        {
            "uri": "file:///set_Arnold_strands_settings.json"
        },
        {
            "uri": "file:///increment_decrement.json"
        },
        {
            "uri": "file:///create_arrow_strands.json"
        },
        {
            "uri": "file:///Math_matrix_to_quaternion.json"
        },
        {
            "uri": "file:///object_terminal.json"
        },
        {
            "uri": "file:///view_vector_frm_mtx_start_end.json"
        }
    ],
    "namespaces": [],
    "types": [],
    "compounds": [
        {
            "name": "User::Compounds::ParentConstraint",
            "uriImported": "file:///ParentConstraint.json",
            "metadata": [
                {
                    "metaName": "io_nodes",
                    "metadata": [
                        {
                            "metaName": "io_inodes",
                            "metadata": [
                                {
                                    "metaName": "input",
                                    "metadata": [
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "src"
                                                },
                                                {
                                                    "metaName": "src_pos"
                                                },
                                                {
                                                    "metaName": "tgt_pos"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "metaName": "io_onodes",
                            "metadata": [
                                {
                                    "metaName": "output",
                                    "metadata": [
                                        {
                                            "metaName": "io_ports",
                                            "metadata": [
                                                {
                                                    "metaName": "out_constraint"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "metaName": "DisplayMode",
                    "metaType": "string",
                    "metaValue": "2"
                },
                {
                    "metaName": "LayoutPos",
                    "metaType": "string",
                    "metaValue": "-124.854 -57.459"
                }
            ],
            "ports": [
                {
                    "portName": "src",
                    "portDirection": "input",
                    "portType": "Math::float4x4",
                    "portDefault": {
                        "c0": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c1": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c2": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c3": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        }
                    }
                },
                {
                    "portName": "src_pos",
                    "portDirection": "input",
                    "portType": "Math::float4x4",
                    "portDefault": {
                        "c0": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c1": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c2": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c3": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        }
                    }
                },
                {
                    "portName": "out_constraint",
                    "portDirection": "output"
                },
                {
                    "portName": "tgt_pos",
                    "portDirection": "input",
                    "portType": "Math::float4x4",
                    "portDefault": {
                        "c0": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c1": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c2": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c3": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        }
                    }
                }
            ],
            "compoundNodes": [
                {
                    "nodeName": "inverse_matrix",
                    "nodeType": "Core::Math::inverse_matrix",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-662.792 -16.2234"
                        }
                    ]
                },
                {
                    "nodeName": "matrix_multiply",
                    "nodeType": "Core::Math::matrix_multiply",
                    "multiInPortNames": [
                        "src",
                        "matrix1"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-57.3799 -73.798"
                        }
                    ]
                },
                {
                    "nodeName": "matrix_multiply1",
                    "nodeType": "Core::Math::matrix_multiply",
                    "multiInPortNames": [
                        "tgt_pos",
                        "inverted"
                    ],
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "-363.135 -2.04242"
                        }
                    ]
                },
                {
                    "nodeName": "view_vector_frm_mtx_start_end",
                    "nodeType": "User::Compounds::view_vector_frm_mtx_start_end",
                    "metadata": [
                        {
                            "metaName": "DisplayMode",
                            "metaType": "string",
                            "metaValue": "2"
                        },
                        {
                            "metaName": "LayoutPos",
                            "metaType": "string",
                            "metaValue": "274.887 -275.027"
                        }
                    ]
                }
            ],
            "connections": [
                {
                    "source": ".src_pos",
                    "target": "inverse_matrix.matrix"
                },
                {
                    "source": "inverse_matrix.inverted",
                    "target": "matrix_multiply1.first.inverted"
                },
                {
                    "source": ".src",
                    "target": "matrix_multiply.first.src"
                },
                {
                    "source": "matrix_multiply1.matrix",
                    "target": "matrix_multiply.first.matrix1"
                },
                {
                    "source": "matrix_multiply.matrix",
                    "target": "view_vector_frm_mtx_start_end.end"
                },
                {
                    "source": "matrix_multiply.matrix",
                    "target": ".out_constraint"
                },
                {
                    "source": ".tgt_pos",
                    "target": "matrix_multiply1.first.tgt_pos"
                },
                {
                    "source": ".src",
                    "target": "view_vector_frm_mtx_start_end.start"
                }
            ],
            "values": [
                {
                    "valueName": "view_vector_frm_mtx_start_end.start",
                    "valueType": "Math::float4x4",
                    "value": {
                        "c0": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c1": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c2": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c3": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        }
                    }
                },
                {
                    "valueName": "view_vector_frm_mtx_start_end.end",
                    "valueType": "Math::float4x4",
                    "value": {
                        "c0": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c1": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c2": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        },
                        "c3": {
                            "x": "0f",
                            "y": "0f",
                            "z": "0f",
                            "w": "0f"
                        }
                    }
                }
            ],
            "reservedNodeNames": [
                {
                    "name": "input"
                },
                {
                    "name": "output"
                }
            ]
        }
    ]
}
